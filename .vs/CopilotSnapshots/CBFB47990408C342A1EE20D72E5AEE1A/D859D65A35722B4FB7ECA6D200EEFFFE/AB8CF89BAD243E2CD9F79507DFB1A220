using BusinessObjects;
using System;
using System.Collections.Generic;
using System.Linq;

namespace DataAccessLayer
{
    public class CustomersDAO
    {    
        private static List<Customers> customers = new List<Customers>
        {
            new Customers
            {
                CustomerId = 1,
                CompanyName = "Alfreds Futterkiste",
                ContactName = "Maria Anders",
                ContactTitle = "Sales Representative",
                Address = "Obere Str. 57",
                Phone = "030-0074321"
            }
        };

        public static List<Customers> GetAllCustomers()
        {
            return customers;
        }

        public static Customers GetCustomerById(int customerId)
        {
            return customers.FirstOrDefault(c => c.CustomerId == customerId);
        }

        public static Customers GetCustomerByPhone(string phone)
        {
            return customers.FirstOrDefault(c => c.Phone == phone);
        }

        public static void AddCustomer(Customers customer)
        {
            if (customer == null) throw new ArgumentNullException(nameof(customer));
            if (customers.Any(c => c.CustomerId == customer.CustomerId))
                throw new ArgumentException("Customer with this ID already exists");
            
            customers.Add(customer);
        }

        public static void UpdateCustomer(Customers customer)
        {
            if (customer == null) throw new ArgumentNullException(nameof(customer));
            
            var existingCustomer = customers.FirstOrDefault(c => c.CustomerId == customer.CustomerId);
            if (existingCustomer == null)
                throw new ArgumentException("Customer not found");

            var index = customers.IndexOf(existingCustomer);
            customers[index] = customer;
        }

        public static void DeleteCustomer(int customerId)
        {
            var customer = customers.FirstOrDefault(c => c.CustomerId == customerId);
            if (customer != null)
            {
                customers.Remove(customer);
            }
        }

        public static List<Customers> SearchCustomers(string searchTerm)
        {
            if (string.IsNullOrWhiteSpace(searchTerm))
                return customers;

            return customers.Where(c => 
                c.CompanyName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                c.ContactName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                c.Address.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
                .ToList();
        }
    }
}
